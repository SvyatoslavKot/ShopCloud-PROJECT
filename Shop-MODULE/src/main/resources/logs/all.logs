2023-01-15 12:06:12,659 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-2] Securing GET /product/list
2023-01-15 12:06:12,663 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-2] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:12,675 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-2] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:12,676 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-2] Authorized filter invocation [GET /product/list] with attributes [permitAll]
2023-01-15 12:06:12,676 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-2] Secured GET /product/list
2023-01-15 12:06:12,679 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:12,682 INFO org.springframework.amqp.rabbit.listener.DirectReplyToMessageListenerContainer [http-nio-8078-exec-2] SimpleConsumer [queue=amq.rabbitmq.reply-to, index=0, consumerTag=amq.ctag-ib-G-yJANDdhlncixxegYw identity=5f33f94b] started
2023-01-15 12:06:12,698 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:12,698 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:12,699 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:13,280 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-2] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 09:06:13 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 12:06:13,313 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-2] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:13,337 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-2] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:13,337 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-2] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:13,364 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-5] Securing GET /img/chees.jpg
2023-01-15 12:06:13,365 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-5] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:13,365 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-5] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:13,365 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-5] Authorized filter invocation [GET /img/chees.jpg] with attributes [permitAll]
2023-01-15 12:06:13,366 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-5] Secured GET /img/chees.jpg
2023-01-15 12:06:13,367 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:13,378 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:13,378 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:13,378 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:13,381 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-5] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:13,382 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-5] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:13,382 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-5] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:16,651 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-6] Securing GET /product/4/bucket
2023-01-15 12:06:16,652 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-6] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:16,653 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-6] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:16,654 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-6] Authorized filter invocation [GET /product/4/bucket] with attributes [permitAll]
2023-01-15 12:06:16,654 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-6] Secured GET /product/4/bucket
2023-01-15 12:06:16,659 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:16,683 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:16,684 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:16,684 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:16,689 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-6] Produce to Product Module -> Add to bucket by id, productId: 4, mail: mail@mail.ru
2023-01-15 12:06:16,698 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-6] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:16,698 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-6] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:16,699 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-6] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:16,706 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-8] Securing GET /product/list
2023-01-15 12:06:16,707 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-8] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:16,707 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-8] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:16,707 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-8] Authorized filter invocation [GET /product/list] with attributes [permitAll]
2023-01-15 12:06:16,708 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-8] Secured GET /product/list
2023-01-15 12:06:16,710 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:16,725 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:16,725 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:16,725 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:16,750 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-8] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 09:06:16 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 12:06:16,760 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-8] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:16,774 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-8] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:16,774 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-8] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:16,794 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-7] Securing GET /img/chees.jpg
2023-01-15 12:06:16,795 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-7] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:16,795 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-7] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:16,795 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-7] Authorized filter invocation [GET /img/chees.jpg] with attributes [permitAll]
2023-01-15 12:06:16,795 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-7] Secured GET /img/chees.jpg
2023-01-15 12:06:16,798 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:16,806 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:16,807 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:16,807 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:16,811 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-7] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:16,812 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-7] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:16,812 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-7] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:17,576 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-9] Securing GET /product/3/bucket
2023-01-15 12:06:17,577 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-9] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:17,577 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-9] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:17,577 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-9] Authorized filter invocation [GET /product/3/bucket] with attributes [permitAll]
2023-01-15 12:06:17,578 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-9] Secured GET /product/3/bucket
2023-01-15 12:06:17,579 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:17,590 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:17,590 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:17,591 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:17,592 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-9] Produce to Product Module -> Add to bucket by id, productId: 3, mail: mail@mail.ru
2023-01-15 12:06:17,593 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-9] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:17,594 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-9] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:17,594 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-9] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:17,599 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-10] Securing GET /product/list
2023-01-15 12:06:17,600 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-10] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:17,600 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-10] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:17,601 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-10] Authorized filter invocation [GET /product/list] with attributes [permitAll]
2023-01-15 12:06:17,601 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-10] Secured GET /product/list
2023-01-15 12:06:17,603 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:17,616 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:17,616 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:17,617 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:17,653 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-10] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 09:06:16 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 12:06:17,660 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-10] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:17,671 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-10] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:17,671 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-10] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:17,695 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-1] Securing GET /img/chees.jpg
2023-01-15 12:06:17,696 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-1] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:17,696 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-1] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:17,696 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-1] Authorized filter invocation [GET /img/chees.jpg] with attributes [permitAll]
2023-01-15 12:06:17,696 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-1] Secured GET /img/chees.jpg
2023-01-15 12:06:17,698 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:17,707 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:17,707 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:17,707 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:17,711 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-1] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:17,713 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-1] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:17,713 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-1] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:20,249 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-3] Securing GET /bucket
2023-01-15 12:06:20,249 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-3] Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:20,249 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-3] Set SecurityContextHolder to SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]]
2023-01-15 12:06:20,250 DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor [http-nio-8078-exec-3] Authorized filter invocation [GET /bucket] with attributes [permitAll]
2023-01-15 12:06:20,250 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8078-exec-3] Secured GET /bucket
2023-01-15 12:06:20,251 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:20,262 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:20,263 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:20,263 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:20,264 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-3] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 12:06:20,288 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-3] Produce to Product Module return -> response:BucketDTO(amountProducts=2, sum=225.0, bucketDetails=[BucketDetailsDTO(title=Milk, productId=3, price=75, amount=1, sum=75.0), BucketDetailsDTO(title=Tomato, productId=4, price=150, amount=1, sum=150.0)])
2023-01-15 12:06:20,296 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-3] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:20,297 DEBUG org.springframework.security.web.context.HttpSessionSecurityContextRepository [http-nio-8078-exec-3] Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[developers:read]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@769c1590]
2023-01-15 12:06:20,297 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8078-exec-3] Cleared SecurityContextHolder to complete request
2023-01-15 12:06:46,678 INFO org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler [SpringApplicationShutdownHook] Stopping...
2023-01-15 12:06:46,678 INFO org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler [SpringApplicationShutdownHook] BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3c48bbf3]]
2023-01-15 12:06:46,678 INFO org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler [SpringApplicationShutdownHook] Stopped.
2023-01-15 12:06:47,096 INFO org.springframework.amqp.rabbit.listener.DirectReplyToMessageListenerContainer [SpringApplicationShutdownHook] Successfully waited for consumers to finish.
2023-01-15 12:06:49,171 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-01-15 12:06:49,180 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-15 12:06:49,245 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
