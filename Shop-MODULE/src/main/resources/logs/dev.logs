2023-01-15 09:15:59,026 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module -> Get All
2023-01-15 09:16:04,344 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module return -> responseList: null
2023-01-15 09:16:04,349 ERROR com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Order Module is not responding
2023-01-15 09:16:04,351 ERROR com.example.shop_module.app.service.rabbitMqService.RabbitProductService [http-nio-8078-exec-1] 503 SERVICE_UNAVAILABLE "Нет ответа попробуте позже."
2023-01-15 11:34:01,124 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module -> Get All
2023-01-15 11:34:02,715 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module return -> responseList: [{id=1, title=Cheese, price=450, categories=null, count_in_stock=null}, {id=2, title=Bear, price=45, categories=null, count_in_stock=null}, {id=3, title=Milk, price=75, categories=null, count_in_stock=null}, {id=4, title=Tomato, price=150, categories=null, count_in_stock=null}, {id=5, title=Bread, price=50, categories=null, count_in_stock=null}]
2023-01-15 11:34:25,459 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-1] Produce to AuthModule -> authorization, mail: kotov.svyat6@mail.ru, password: 666666
2023-01-15 11:35:46,457 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> new Client, UserDTO: UserDTO(firstName=name2, lastName=null, mail=kotov.svyat6@mail.ru, password=121212, matchingPassword=121212, role=null, address=null, bucket_id=null)
2023-01-15 11:36:03,277 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> new Client, UserDTO: UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=121212, matchingPassword=121212, role=null, address=null, bucket_id=null)
2023-01-15 11:36:03,679 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=121212, matchingPassword=121212, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:16,318 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-8] Produce to AuthModule -> authorization, mail: mail@mail.ru, password: 121212
2023-01-15 11:36:16,925 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-8] Produce to AuthModule -> authorization return ->, response: {OK=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtYWlsQG1haWwucnUiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY3Mzc3MTc3NiwiZXhwIjoxNjc0Mzc2NjU2fQ.PT3YOqjC_akGUsCKf-6BhOKUSaK_Y81ybD2SF731Htc}
2023-01-15 11:36:16,971 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:16,984 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:16,984 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:16,987 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:25,774 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:25,803 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:25,804 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:25,805 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:28,983 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:28,999 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:29,000 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:29,000 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:30,836 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:30,849 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:30,849 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:30,849 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:30,858 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-2] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:36:30,967 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-2] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:36:32,153 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:32,165 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:32,166 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:32,166 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:40,297 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:40,320 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:40,321 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:40,321 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:44,051 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:44,068 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:44,068 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:44,068 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:46,993 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:47,006 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:47,006 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:47,007 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:47,007 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-9] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:36:47,017 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-9] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:36:48,791 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:48,810 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:36:48,811 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:36:48,812 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:36:48,814 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:36:48,833 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:37:32,260 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:37:32,273 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:37:32,274 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:37:32,274 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:37:32,275 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-2] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:37:32,285 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-2] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:37:32,963 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:37:32,973 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:37:32,973 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:37:32,973 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:37:34,497 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:37:34,510 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:37:34,510 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:37:34,511 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:37:47,851 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-1] Produce to AuthModule -> authorization, mail: mail@mail.ru, password: 121212
2023-01-15 11:37:48,459 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-1] Produce to AuthModule -> authorization return ->, response: {OK=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtYWlsQG1haWwucnUiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY3Mzc3MTg2OCwiZXhwIjoxNjc0Mzc2NzQ4fQ.ikqy0ZCXqHhqfmyFBlR7cqvkgJgBzapQ5aGb5HKPIcA}
2023-01-15 11:37:48,468 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:37:48,489 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:37:48,489 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:37:48,489 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:02,805 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:02,819 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:02,820 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:02,820 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:04,527 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:04,539 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:04,540 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:04,540 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:04,541 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-7] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:38:04,548 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-7] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:38:05,341 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:05,352 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:05,353 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:05,353 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:06,561 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:06,583 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:06,584 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:06,584 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:07,154 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:07,175 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:07,175 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:07,175 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:12,361 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:12,380 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:12,381 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:12,381 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:38:13,475 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:38:13,487 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:38:13,487 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:38:13,487 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:39:47,906 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:39:47,924 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:39:47,924 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-4] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:39:47,925 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-4] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:13,613 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:13,642 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:13,642 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:13,643 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:14,311 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:14,325 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:14,326 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:14,326 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:14,922 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:14,942 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:14,942 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:14,942 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:17,768 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:17,779 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:17,779 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:17,780 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:17,781 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-10] Produce to Product Module -> Get All
2023-01-15 11:40:17,791 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-10] Produce to Product Module return -> responseList: [{id=1, title=Cheese, price=450, categories=null, count_in_stock=null}, {id=2, title=Bear, price=45, categories=null, count_in_stock=null}, {id=3, title=Milk, price=75, categories=null, count_in_stock=null}, {id=4, title=Tomato, price=150, categories=null, count_in_stock=null}, {id=5, title=Bread, price=50, categories=null, count_in_stock=null}]
2023-01-15 11:40:19,906 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:19,906 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:19,906 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:19,929 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:19,929 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:19,930 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:19,933 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:19,934 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:19,934 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:19,939 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:19,939 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:19,939 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:19,945 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:19,953 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:19,953 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-4] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:19,953 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-4] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:21,084 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:21,092 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:21,093 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:21,093 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:21,171 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:21,188 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:21,189 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:21,189 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:23,737 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:23,749 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:23,750 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:23,750 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:40:26,419 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:40:26,430 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:40:26,431 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-4] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:40:26,431 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-4] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:20,126 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:20,138 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:20,139 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:20,139 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:20,140 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-8] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:41:20,152 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-8] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:41:21,504 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:21,516 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:21,516 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:21,517 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:38,026 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:38,049 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:38,050 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:38,050 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:38,842 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:39,060 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:39,061 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:39,062 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:39,755 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:39,782 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:39,782 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:39,783 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:40,414 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:40,427 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:40,427 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:40,427 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:41,084 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:41,102 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:41,103 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:41,103 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:41,677 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:41,688 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:41,688 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-4] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:41,688 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-4] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:43,255 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:43,278 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:43,278 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:43,278 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:41:43,279 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:43,286 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:55,170 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:41:55,180 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:41:55,181 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:41:55,181 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:43:41,531 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-7] Produce to AuthModule -> authorization, mail: mail@mail.ru, password: 121212
2023-01-15 11:43:42,137 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-7] Produce to AuthModule -> authorization return ->, response: {OK=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtYWlsQG1haWwucnUiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY3Mzc3MjIyMiwiZXhwIjoxNjc0Mzc3MTAyfQ.4Goyz8V_IkumBxxsiHPaJ07j39OJyHQRn_cSrnDAyhA}
2023-01-15 11:43:42,144 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:43:42,164 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:43:42,165 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:43:42,165 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:43:49,797 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:43:49,808 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:43:49,809 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:43:49,809 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:43:49,810 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:43:50,448 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:43:51,673 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:43:51,686 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:43:51,687 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:43:51,687 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:44:17,093 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:44:17,159 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-4] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:44:17,161 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-4] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:44:17,162 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-4] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:44:19,128 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:44:19,139 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:44:19,140 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:44:19,140 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:44:20,393 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:44:20,404 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:44:20,405 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:44:20,405 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:44:20,406 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-8] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:44:20,645 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-8] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:45:30,498 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-6] Produce to Product Module -> Get All
2023-01-15 11:45:31,076 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-6] Produce to Product Module return -> responseList: [{id=1, title=Cheese, price=450, categories=null, count_in_stock=null}, {id=2, title=Bear, price=45, categories=null, count_in_stock=null}, {id=3, title=Milk, price=75, categories=null, count_in_stock=null}, {id=4, title=Tomato, price=150, categories=null, count_in_stock=null}, {id=5, title=Bread, price=50, categories=null, count_in_stock=null}]
2023-01-15 11:46:03,079 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-3] Produce to AuthModule -> authorization, mail: mail@mail.ru, password: 121212
2023-01-15 11:46:03,686 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceAuthModule [http-nio-8078-exec-3] Produce to AuthModule -> authorization return ->, response: {OK=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtYWlsQG1haWwucnUiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY3Mzc3MjM2MywiZXhwIjoxNjc0Mzc3MjQzfQ.UsI6X0kH2js6Vbunwnw_KAXSUwr5hmgZLWs2dmaGEwg}
2023-01-15 11:46:03,694 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:46:03,709 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:46:03,709 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:46:03,709 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:46:23,147 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:46:23,158 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:46:23,158 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:46:23,158 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:50:58,333 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:50:58,352 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:50:58,353 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:50:58,353 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:29,128 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:29,140 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:29,140 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:29,140 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:30,068 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:30,079 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:30,080 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:30,080 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:30,081 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-9] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:51:30,090 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-9] Produce to Product Module return -> response:BucketDTO(amountProducts=0, sum=null, bucketDetails=null)
2023-01-15 11:51:31,387 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:31,398 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:31,399 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:31,399 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:32,279 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:32,340 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:32,341 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:32,341 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:32,783 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:32,797 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:32,798 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:32,798 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:32,976 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:33,016 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:33,016 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:33,016 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:33,149 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:33,157 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:33,157 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:33,157 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:51:33,311 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:51:33,322 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:51:33,322 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:51:33,322 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:41,568 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:42,163 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:58:42,198 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:58:42,203 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:42,806 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-1] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 08:58:42 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 11:58:44,024 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:44,038 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:58:44,039 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:58:44,039 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:48,600 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:48,611 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:58:48,612 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:58:48,612 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:48,630 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-5] Produce to Product Module -> Add to bucket by id, productId: 1, mail: mail@mail.ru
2023-01-15 11:58:48,695 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:48,705 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:58:48,705 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:58:48,706 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:48,735 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-6] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 08:58:48 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 11:58:48,831 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:48,853 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=null) 
2023-01-15 11:58:48,853 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=null)
2023-01-15 11:58:48,854 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:49,873 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:49,906 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 11:58:49,906 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 11:58:49,907 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:49,908 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-7] Produce to Product Module -> Add to bucket by id, productId: 2, mail: mail@mail.ru
2023-01-15 11:58:49,924 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:49,934 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 11:58:49,934 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 11:58:49,934 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:50,012 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-9] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 08:58:49 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 11:58:50,208 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:50,220 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 11:58:50,220 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 11:58:50,220 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:51,267 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 11:58:51,277 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 11:58:51,277 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 11:58:51,278 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 11:58:51,282 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 11:58:51,424 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-1] Produce to Product Module return -> response:BucketDTO(amountProducts=2, sum=495.0, bucketDetails=[BucketDetailsDTO(title=Cheese, productId=1, price=450, amount=1, sum=450.0), BucketDetailsDTO(title=Bear, productId=2, price=45, amount=1, sum=45.0)])
2023-01-15 12:06:12,679 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:12,698 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-2] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:12,698 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-2] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:12,699 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-2] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:13,280 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-2] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 09:06:13 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 12:06:13,367 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:13,378 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-5] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:13,378 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-5] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:13,378 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-5] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:16,659 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:16,683 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-6] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:16,684 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-6] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:16,684 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-6] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:16,689 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-6] Produce to Product Module -> Add to bucket by id, productId: 4, mail: mail@mail.ru
2023-01-15 12:06:16,710 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:16,725 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-8] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:16,725 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-8] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:16,725 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-8] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:16,750 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-8] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 09:06:16 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 12:06:16,798 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:16,806 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-7] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=93) 
2023-01-15 12:06:16,807 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-7] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=93)
2023-01-15 12:06:16,807 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-7] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:17,579 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:17,590 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-9] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:17,590 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-9] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:17,591 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-9] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:17,592 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-9] Produce to Product Module -> Add to bucket by id, productId: 3, mail: mail@mail.ru
2023-01-15 12:06:17,603 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:17,616 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-10] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:17,616 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-10] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:17,617 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-10] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:17,653 INFO com.example.shop_module.app.restClient.RestProductClient [http-nio-8078-exec-10] response -> <200,Page 1 of 2 containing com.example.shop_module.app.dto.ProductDTO instances,[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Sun, 15 Jan 2023 09:06:16 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-01-15 12:06:17,698 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:17,707 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-1] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:17,707 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-1] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:17,707 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-1] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:20,251 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule -> get Client by mail, mail: mail@mail.ru
2023-01-15 12:06:20,262 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceShopClient [http-nio-8078-exec-3] Produce to ClientModule return -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=null, matchingPassword=null, role=USER, address=null, bucket_id=94) 
2023-01-15 12:06:20,263 INFO com.example.shop_module.app.security.JwtTokenProviderService [http-nio-8078-exec-3] Get User from Token -> UserDTO(firstName=name2, lastName=null, mail=mail@mail.ru, password=, matchingPassword=null, role=USER, address=null, bucket_id=94)
2023-01-15 12:06:20,263 INFO com.example.shop_module.app.security.JwtTokenProvider [http-nio-8078-exec-3] UserDetails - > org.springframework.security.core.userdetails.User [Username=mail@mail.ru, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[developers:read]]
2023-01-15 12:06:20,264 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-3] Produce to Product Module ->Get bucket by User(mail), email: mail@mail.ru
2023-01-15 12:06:20,288 INFO com.example.shop_module.app.mq.rabbitMq.RabbitProduceProductModule [http-nio-8078-exec-3] Produce to Product Module return -> response:BucketDTO(amountProducts=2, sum=225.0, bucketDetails=[BucketDetailsDTO(title=Milk, productId=3, price=75, amount=1, sum=75.0), BucketDetailsDTO(title=Tomato, productId=4, price=150, amount=1, sum=150.0)])
